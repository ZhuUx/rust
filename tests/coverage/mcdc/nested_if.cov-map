Function name: nested_if::doubly_nested_if_in_condition
Raw bytes (186): 0x[01, 01, 17, 01, 05, 0b, 0d, 4f, 21, 11, 15, 05, 11, 1b, 15, 3e, 43, 19, 1d, 1d, 46, 4a, 19, 05, 11, 05, 11, 4a, 19, 05, 11, 19, 1d, 19, 1d, 1d, 46, 4a, 19, 05, 11, 11, 15, 09, 02, 0d, 5b, 09, 02, 14, 01, 0f, 01, 01, 09, 28, 02, 02, 01, 08, 00, 4e, 30, 05, 02, 01, 02, 00, 00, 08, 00, 09, 30, 0d, 06, 02, 00, 00, 00, 0d, 00, 4e, 05, 00, 10, 00, 11, 28, 01, 02, 00, 10, 00, 36, 30, 11, 4a, 01, 00, 02, 00, 10, 00, 11, 30, 15, 16, 02, 00, 00, 00, 15, 00, 36, 4a, 00, 18, 00, 19, 28, 00, 02, 00, 18, 00, 1e, 30, 19, 46, 01, 02, 00, 00, 18, 00, 19, 19, 00, 1d, 00, 1e, 30, 3e, 1d, 02, 00, 00, 00, 1d, 00, 1e, 3e, 00, 21, 00, 25, 43, 00, 2f, 00, 34, 4f, 00, 39, 00, 3e, 21, 00, 48, 00, 4c, 0d, 00, 4f, 02, 06, 5b, 02, 0c, 02, 06, 57, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 23
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(3)
- expression 2 operands: lhs = Expression(19, Add), rhs = Counter(8)
- expression 3 operands: lhs = Counter(4), rhs = Counter(5)
- expression 4 operands: lhs = Counter(1), rhs = Counter(4)
- expression 5 operands: lhs = Expression(6, Add), rhs = Counter(5)
- expression 6 operands: lhs = Expression(15, Sub), rhs = Expression(16, Add)
- expression 7 operands: lhs = Counter(6), rhs = Counter(7)
- expression 8 operands: lhs = Counter(7), rhs = Expression(17, Sub)
- expression 9 operands: lhs = Expression(18, Sub), rhs = Counter(6)
- expression 10 operands: lhs = Counter(1), rhs = Counter(4)
- expression 11 operands: lhs = Counter(1), rhs = Counter(4)
- expression 12 operands: lhs = Expression(18, Sub), rhs = Counter(6)
- expression 13 operands: lhs = Counter(1), rhs = Counter(4)
- expression 14 operands: lhs = Counter(6), rhs = Counter(7)
- expression 15 operands: lhs = Counter(6), rhs = Counter(7)
- expression 16 operands: lhs = Counter(7), rhs = Expression(17, Sub)
- expression 17 operands: lhs = Expression(18, Sub), rhs = Counter(6)
- expression 18 operands: lhs = Counter(1), rhs = Counter(4)
- expression 19 operands: lhs = Counter(4), rhs = Counter(5)
- expression 20 operands: lhs = Counter(2), rhs = Expression(0, Sub)
- expression 21 operands: lhs = Counter(3), rhs = Expression(22, Add)
- expression 22 operands: lhs = Counter(2), rhs = Expression(0, Sub)
Number of file 0 mappings: 20
- Code(Counter(0)) at (prev + 15, 1) to (start + 1, 9)
- MCDCDecision { bitmap_idx: 2, conditions_num: 2 } at (prev + 1, 8) to (start + 0, 78)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- MCDCBranch { true: Counter(3), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 78)
    true  = c3
    false = (((c4 + c5) + c8) - c3)
- Code(Counter(1)) at (prev + 0, 16) to (start + 0, 17)
- MCDCDecision { bitmap_idx: 1, conditions_num: 2 } at (prev + 0, 16) to (start + 0, 54)
- MCDCBranch { true: Counter(4), false: Expression(18, Sub), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 16) to (start + 0, 17)
    true  = c4
    false = (c1 - c4)
- MCDCBranch { true: Counter(5), false: Expression(5, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 54)
    true  = c5
    false = (((c6 - c7) + (c7 + ((c1 - c4) - c6))) - c5)
- Code(Expression(18, Sub)) at (prev + 0, 24) to (start + 0, 25)
    = (c1 - c4)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 0, 24) to (start + 0, 30)
- MCDCBranch { true: Counter(6), false: Expression(17, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 24) to (start + 0, 25)
    true  = c6
    false = ((c1 - c4) - c6)
- Code(Counter(6)) at (prev + 0, 29) to (start + 0, 30)
- MCDCBranch { true: Expression(15, Sub), false: Counter(7), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 29) to (start + 0, 30)
    true  = (c6 - c7)
    false = c7
- Code(Expression(15, Sub)) at (prev + 0, 33) to (start + 0, 37)
    = (c6 - c7)
- Code(Expression(16, Add)) at (prev + 0, 47) to (start + 0, 52)
    = (c7 + ((c1 - c4) - c6))
- Code(Expression(19, Add)) at (prev + 0, 57) to (start + 0, 62)
    = (c4 + c5)
- Code(Counter(8)) at (prev + 0, 72) to (start + 0, 76)
- Code(Counter(3)) at (prev + 0, 79) to (start + 2, 6)
- Code(Expression(22, Add)) at (prev + 2, 12) to (start + 2, 6)
    = (c2 + (c0 - c1))
- Code(Expression(21, Add)) at (prev + 3, 1) to (start + 0, 2)
    = (c3 + (c2 + (c0 - c1)))

Function name: nested_if::nested_if_in_condition
Raw bytes (130): 0x[01, 01, 10, 01, 05, 0b, 0d, 2b, 2e, 11, 15, 32, 15, 05, 11, 05, 11, 05, 11, 32, 15, 05, 11, 11, 15, 32, 15, 05, 11, 09, 02, 0d, 3f, 09, 02, 0e, 01, 07, 01, 01, 09, 28, 01, 02, 01, 08, 00, 2e, 30, 05, 02, 01, 02, 00, 00, 08, 00, 09, 30, 0d, 06, 02, 00, 00, 00, 0d, 00, 2e, 05, 00, 10, 00, 11, 28, 00, 02, 00, 10, 00, 16, 30, 11, 32, 01, 00, 02, 00, 10, 00, 11, 32, 00, 15, 00, 16, 30, 15, 2e, 02, 00, 00, 00, 15, 00, 16, 2b, 00, 19, 00, 1d, 2e, 00, 27, 00, 2c, 0d, 00, 2f, 02, 06, 3f, 02, 0c, 02, 06, 3b, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 16
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(3)
- expression 2 operands: lhs = Expression(10, Add), rhs = Expression(11, Sub)
- expression 3 operands: lhs = Counter(4), rhs = Counter(5)
- expression 4 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 5 operands: lhs = Counter(1), rhs = Counter(4)
- expression 6 operands: lhs = Counter(1), rhs = Counter(4)
- expression 7 operands: lhs = Counter(1), rhs = Counter(4)
- expression 8 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 9 operands: lhs = Counter(1), rhs = Counter(4)
- expression 10 operands: lhs = Counter(4), rhs = Counter(5)
- expression 11 operands: lhs = Expression(12, Sub), rhs = Counter(5)
- expression 12 operands: lhs = Counter(1), rhs = Counter(4)
- expression 13 operands: lhs = Counter(2), rhs = Expression(0, Sub)
- expression 14 operands: lhs = Counter(3), rhs = Expression(15, Add)
- expression 15 operands: lhs = Counter(2), rhs = Expression(0, Sub)
Number of file 0 mappings: 14
- Code(Counter(0)) at (prev + 7, 1) to (start + 1, 9)
- MCDCDecision { bitmap_idx: 1, conditions_num: 2 } at (prev + 1, 8) to (start + 0, 46)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- MCDCBranch { true: Counter(3), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 46)
    true  = c3
    false = (((c4 + c5) + ((c1 - c4) - c5)) - c3)
- Code(Counter(1)) at (prev + 0, 16) to (start + 0, 17)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 0, 16) to (start + 0, 22)
- MCDCBranch { true: Counter(4), false: Expression(12, Sub), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 16) to (start + 0, 17)
    true  = c4
    false = (c1 - c4)
- Code(Expression(12, Sub)) at (prev + 0, 21) to (start + 0, 22)
    = (c1 - c4)
- MCDCBranch { true: Counter(5), false: Expression(11, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 22)
    true  = c5
    false = ((c1 - c4) - c5)
- Code(Expression(10, Add)) at (prev + 0, 25) to (start + 0, 29)
    = (c4 + c5)
- Code(Expression(11, Sub)) at (prev + 0, 39) to (start + 0, 44)
    = ((c1 - c4) - c5)
- Code(Counter(3)) at (prev + 0, 47) to (start + 2, 6)
- Code(Expression(15, Add)) at (prev + 2, 12) to (start + 2, 6)
    = (c2 + (c0 - c1))
- Code(Expression(14, Add)) at (prev + 3, 1) to (start + 0, 2)
    = (c3 + (c2 + (c0 - c1)))

Function name: nested_if::nested_in_then_block_in_condition
Raw bytes (190): 0x[01, 01, 19, 01, 05, 0b, 0d, 0f, 52, 21, 47, 1d, 4a, 4f, 19, 11, 15, 56, 15, 05, 11, 05, 11, 05, 11, 56, 15, 05, 11, 11, 15, 4f, 19, 11, 15, 19, 21, 1d, 4a, 4f, 19, 11, 15, 56, 15, 05, 11, 09, 02, 0d, 63, 09, 02, 14, 01, 22, 01, 01, 09, 28, 02, 02, 01, 08, 00, 4b, 30, 05, 02, 01, 02, 00, 00, 08, 00, 09, 30, 0d, 06, 02, 00, 00, 00, 0d, 00, 4b, 05, 00, 10, 00, 11, 28, 00, 02, 00, 10, 00, 16, 30, 11, 56, 01, 00, 02, 00, 10, 00, 11, 56, 00, 15, 00, 16, 30, 15, 52, 02, 00, 00, 00, 15, 00, 16, 4f, 00, 1c, 00, 1d, 28, 01, 02, 00, 1c, 00, 22, 30, 19, 4a, 01, 02, 00, 00, 1c, 00, 1d, 19, 00, 21, 00, 22, 30, 21, 42, 02, 00, 00, 00, 21, 00, 22, 21, 00, 25, 00, 29, 47, 00, 33, 00, 38, 52, 00, 44, 00, 49, 0d, 00, 4c, 02, 06, 63, 02, 0c, 02, 06, 5f, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 25
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(3)
- expression 2 operands: lhs = Expression(3, Add), rhs = Expression(20, Sub)
- expression 3 operands: lhs = Counter(8), rhs = Expression(17, Add)
- expression 4 operands: lhs = Counter(7), rhs = Expression(18, Sub)
- expression 5 operands: lhs = Expression(19, Add), rhs = Counter(6)
- expression 6 operands: lhs = Counter(4), rhs = Counter(5)
- expression 7 operands: lhs = Expression(21, Sub), rhs = Counter(5)
- expression 8 operands: lhs = Counter(1), rhs = Counter(4)
- expression 9 operands: lhs = Counter(1), rhs = Counter(4)
- expression 10 operands: lhs = Counter(1), rhs = Counter(4)
- expression 11 operands: lhs = Expression(21, Sub), rhs = Counter(5)
- expression 12 operands: lhs = Counter(1), rhs = Counter(4)
- expression 13 operands: lhs = Counter(4), rhs = Counter(5)
- expression 14 operands: lhs = Expression(19, Add), rhs = Counter(6)
- expression 15 operands: lhs = Counter(4), rhs = Counter(5)
- expression 16 operands: lhs = Counter(6), rhs = Counter(8)
- expression 17 operands: lhs = Counter(7), rhs = Expression(18, Sub)
- expression 18 operands: lhs = Expression(19, Add), rhs = Counter(6)
- expression 19 operands: lhs = Counter(4), rhs = Counter(5)
- expression 20 operands: lhs = Expression(21, Sub), rhs = Counter(5)
- expression 21 operands: lhs = Counter(1), rhs = Counter(4)
- expression 22 operands: lhs = Counter(2), rhs = Expression(0, Sub)
- expression 23 operands: lhs = Counter(3), rhs = Expression(24, Add)
- expression 24 operands: lhs = Counter(2), rhs = Expression(0, Sub)
Number of file 0 mappings: 20
- Code(Counter(0)) at (prev + 34, 1) to (start + 1, 9)
- MCDCDecision { bitmap_idx: 2, conditions_num: 2 } at (prev + 1, 8) to (start + 0, 75)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- MCDCBranch { true: Counter(3), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 75)
    true  = c3
    false = (((c8 + (c7 + ((c4 + c5) - c6))) + ((c1 - c4) - c5)) - c3)
- Code(Counter(1)) at (prev + 0, 16) to (start + 0, 17)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 0, 16) to (start + 0, 22)
- MCDCBranch { true: Counter(4), false: Expression(21, Sub), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 16) to (start + 0, 17)
    true  = c4
    false = (c1 - c4)
- Code(Expression(21, Sub)) at (prev + 0, 21) to (start + 0, 22)
    = (c1 - c4)
- MCDCBranch { true: Counter(5), false: Expression(20, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 22)
    true  = c5
    false = ((c1 - c4) - c5)
- Code(Expression(19, Add)) at (prev + 0, 28) to (start + 0, 29)
    = (c4 + c5)
- MCDCDecision { bitmap_idx: 1, conditions_num: 2 } at (prev + 0, 28) to (start + 0, 34)
- MCDCBranch { true: Counter(6), false: Expression(18, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 29)
    true  = c6
    false = ((c4 + c5) - c6)
- Code(Counter(6)) at (prev + 0, 33) to (start + 0, 34)
- MCDCBranch { true: Counter(8), false: Expression(16, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 33) to (start + 0, 34)
    true  = c8
    false = (c6 - c8)
- Code(Counter(8)) at (prev + 0, 37) to (start + 0, 41)
- Code(Expression(17, Add)) at (prev + 0, 51) to (start + 0, 56)
    = (c7 + ((c4 + c5) - c6))
- Code(Expression(20, Sub)) at (prev + 0, 68) to (start + 0, 73)
    = ((c1 - c4) - c5)
- Code(Counter(3)) at (prev + 0, 76) to (start + 2, 6)
- Code(Expression(24, Add)) at (prev + 2, 12) to (start + 2, 6)
    = (c2 + (c0 - c1))
- Code(Expression(23, Add)) at (prev + 3, 1) to (start + 0, 2)
    = (c3 + (c2 + (c0 - c1)))

Function name: nested_if::nested_single_condition_decision
Raw bytes (78): 0x[01, 01, 06, 01, 05, 05, 0d, 05, 11, 09, 02, 0d, 17, 09, 02, 0a, 01, 17, 01, 04, 09, 28, 00, 02, 04, 08, 00, 29, 30, 05, 02, 01, 02, 00, 00, 08, 00, 09, 30, 0d, 06, 02, 00, 00, 00, 0d, 00, 29, 05, 00, 10, 00, 11, 11, 00, 14, 00, 19, 0a, 00, 23, 00, 27, 0d, 00, 2a, 02, 06, 17, 02, 0c, 02, 06, 13, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(3)
- expression 2 operands: lhs = Counter(1), rhs = Counter(4)
- expression 3 operands: lhs = Counter(2), rhs = Expression(0, Sub)
- expression 4 operands: lhs = Counter(3), rhs = Expression(5, Add)
- expression 5 operands: lhs = Counter(2), rhs = Expression(0, Sub)
Number of file 0 mappings: 10
- Code(Counter(0)) at (prev + 23, 1) to (start + 4, 9)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 4, 8) to (start + 0, 41)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- MCDCBranch { true: Counter(3), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 41)
    true  = c3
    false = (c1 - c3)
- Code(Counter(1)) at (prev + 0, 16) to (start + 0, 17)
- Code(Counter(4)) at (prev + 0, 20) to (start + 0, 25)
- Code(Expression(2, Sub)) at (prev + 0, 35) to (start + 0, 39)
    = (c1 - c4)
- Code(Counter(3)) at (prev + 0, 42) to (start + 2, 6)
- Code(Expression(5, Add)) at (prev + 2, 12) to (start + 2, 6)
    = (c2 + (c0 - c1))
- Code(Expression(4, Add)) at (prev + 3, 1) to (start + 0, 2)
    = (c3 + (c2 + (c0 - c1)))

