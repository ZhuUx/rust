Function name: if_let::joint_or_patterns
Raw bytes (394): 0x[01, 01, 46, 15, 19, e3, 01, 11, 09, 0d, 01, 47, 05, 09, 01, 47, 05, 09, 05, 09, 42, 11, 01, 47, 05, 09, 42, 09, 01, 47, 05, 09, 05, 3e, 42, 11, 01, 47, 05, 09, 15, 0d, 19, 0d, e3, 01, 11, 09, 0d, 93, 02, 3d, 97, 02, 39, 31, 35, 87, 02, 2d, 8b, 02, 29, 21, 25, db, 01, b7, 01, df, 01, 03, e3, 01, 11, 09, 0d, 1d, 21, 1d, 21, a6, 01, 29, db, 01, b7, 01, df, 01, 03, e3, 01, 11, 09, 0d, 1d, 21, a6, 01, 21, db, 01, b7, 01, df, 01, 03, e3, 01, 11, 09, 0d, 1d, 21, 3d, 35, c3, 01, 25, c7, 01, 31, 39, 2d, 39, 31, d3, 01, 25, d7, 01, 35, 3d, 2d, df, 01, 03, e3, 01, 11, 09, 0d, 93, 02, 3d, 97, 02, 39, 31, 35, 87, 02, 2d, 8b, 02, 29, 21, 25, 83, 02, 8f, 02, 87, 02, 2d, 8b, 02, 29, 21, 25, 93, 02, 3d, 97, 02, 39, 31, 35, 1c, 01, 26, 01, 00, 27, 28, 00, 05, 01, 0c, 00, 40, 20, 03, df, 01, 00, 0c, 00, 40, 42, 00, 0d, 00, 28, 30, 42, 47, 01, 03, 02, 00, 0d, 00, 14, 30, 3e, 11, 03, 04, 00, 00, 14, 00, 1b, 30, 05, 2f, 02, 04, 00, 00, 1f, 00, 28, 3b, 00, 2a, 00, 3f, 30, 19, 4b, 04, 00, 05, 00, 2a, 00, 33, 30, 15, 4f, 05, 00, 00, 00, 36, 00, 3f, 01, 00, 43, 00, 46, 03, 00, 47, 02, 06, df, 01, 02, 06, 00, 07, 28, 04, 05, 03, 0c, 00, 40, 20, 8f, 02, 83, 02, 00, 0c, 00, 40, 30, a6, 01, b7, 01, 01, 03, 02, 00, 0d, 00, 14, 30, 8a, 01, 29, 03, 04, 00, 00, 14, 00, 1b, 3d, 00, 19, 00, 1a, 30, 1d, a3, 01, 02, 04, 00, 00, 1f, 00, 28, 35, 00, 26, 00, 27, 30, bb, 01, bf, 01, 04, 00, 05, 00, 2a, 00, 33, 3d, 00, 31, 00, 32, 30, cb, 01, cf, 01, 05, 00, 00, 00, 36, 00, 3f, 39, 00, 3d, 00, 3e, db, 01, 00, 43, 00, 46, 8f, 02, 00, 47, 02, 06, 83, 02, 02, 06, 00, 07, ff, 01, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 70
- expression 0 operands: lhs = Counter(5), rhs = Counter(6)
- expression 1 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 2 operands: lhs = Counter(2), rhs = Counter(3)
- expression 3 operands: lhs = Counter(0), rhs = Expression(17, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(0), rhs = Expression(17, Add)
- expression 6 operands: lhs = Counter(1), rhs = Counter(2)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
- expression 8 operands: lhs = Expression(16, Sub), rhs = Counter(4)
- expression 9 operands: lhs = Counter(0), rhs = Expression(17, Add)
- expression 10 operands: lhs = Counter(1), rhs = Counter(2)
- expression 11 operands: lhs = Expression(16, Sub), rhs = Counter(2)
- expression 12 operands: lhs = Counter(0), rhs = Expression(17, Add)
- expression 13 operands: lhs = Counter(1), rhs = Counter(2)
- expression 14 operands: lhs = Counter(1), rhs = Expression(15, Sub)
- expression 15 operands: lhs = Expression(16, Sub), rhs = Counter(4)
- expression 16 operands: lhs = Counter(0), rhs = Expression(17, Add)
- expression 17 operands: lhs = Counter(1), rhs = Counter(2)
- expression 18 operands: lhs = Counter(5), rhs = Counter(3)
- expression 19 operands: lhs = Counter(6), rhs = Counter(3)
- expression 20 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 21 operands: lhs = Counter(2), rhs = Counter(3)
- expression 22 operands: lhs = Expression(68, Add), rhs = Counter(15)
- expression 23 operands: lhs = Expression(69, Add), rhs = Counter(14)
- expression 24 operands: lhs = Counter(12), rhs = Counter(13)
- expression 25 operands: lhs = Expression(65, Add), rhs = Counter(11)
- expression 26 operands: lhs = Expression(66, Add), rhs = Counter(10)
- expression 27 operands: lhs = Counter(8), rhs = Counter(9)
- expression 28 operands: lhs = Expression(54, Add), rhs = Expression(45, Add)
- expression 29 operands: lhs = Expression(55, Add), rhs = Expression(0, Add)
- expression 30 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 31 operands: lhs = Counter(2), rhs = Counter(3)
- expression 32 operands: lhs = Counter(7), rhs = Counter(8)
- expression 33 operands: lhs = Counter(7), rhs = Counter(8)
- expression 34 operands: lhs = Expression(41, Sub), rhs = Counter(10)
- expression 35 operands: lhs = Expression(54, Add), rhs = Expression(45, Add)
- expression 36 operands: lhs = Expression(55, Add), rhs = Expression(0, Add)
- expression 37 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 38 operands: lhs = Counter(2), rhs = Counter(3)
- expression 39 operands: lhs = Counter(7), rhs = Counter(8)
- expression 40 operands: lhs = Expression(41, Sub), rhs = Counter(8)
- expression 41 operands: lhs = Expression(54, Add), rhs = Expression(45, Add)
- expression 42 operands: lhs = Expression(55, Add), rhs = Expression(0, Add)
- expression 43 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 44 operands: lhs = Counter(2), rhs = Counter(3)
- expression 45 operands: lhs = Counter(7), rhs = Counter(8)
- expression 46 operands: lhs = Counter(15), rhs = Counter(13)
- expression 47 operands: lhs = Expression(48, Add), rhs = Counter(9)
- expression 48 operands: lhs = Expression(49, Add), rhs = Counter(12)
- expression 49 operands: lhs = Counter(14), rhs = Counter(11)
- expression 50 operands: lhs = Counter(14), rhs = Counter(12)
- expression 51 operands: lhs = Expression(52, Add), rhs = Counter(9)
- expression 52 operands: lhs = Expression(53, Add), rhs = Counter(13)
- expression 53 operands: lhs = Counter(15), rhs = Counter(11)
- expression 54 operands: lhs = Expression(55, Add), rhs = Expression(0, Add)
- expression 55 operands: lhs = Expression(56, Add), rhs = Counter(4)
- expression 56 operands: lhs = Counter(2), rhs = Counter(3)
- expression 57 operands: lhs = Expression(68, Add), rhs = Counter(15)
- expression 58 operands: lhs = Expression(69, Add), rhs = Counter(14)
- expression 59 operands: lhs = Counter(12), rhs = Counter(13)
- expression 60 operands: lhs = Expression(65, Add), rhs = Counter(11)
- expression 61 operands: lhs = Expression(66, Add), rhs = Counter(10)
- expression 62 operands: lhs = Counter(8), rhs = Counter(9)
- expression 63 operands: lhs = Expression(64, Add), rhs = Expression(67, Add)
- expression 64 operands: lhs = Expression(65, Add), rhs = Counter(11)
- expression 65 operands: lhs = Expression(66, Add), rhs = Counter(10)
- expression 66 operands: lhs = Counter(8), rhs = Counter(9)
- expression 67 operands: lhs = Expression(68, Add), rhs = Counter(15)
- expression 68 operands: lhs = Expression(69, Add), rhs = Counter(14)
- expression 69 operands: lhs = Counter(12), rhs = Counter(13)
Number of file 0 mappings: 28
- Code(Counter(0)) at (prev + 38, 1) to (start + 0, 39)
- MCDCDecision { bitmap_idx: 0, conditions_num: 5 } at (prev + 1, 12) to (start + 0, 64)
- Branch { true: Expression(0, Add), false: Expression(55, Add) } at (prev + 0, 12) to (start + 0, 64)
    true  = (c5 + c6)
    false = ((c2 + c3) + c4)
- Code(Expression(16, Sub)) at (prev + 0, 13) to (start + 0, 40)
    = (c0 - (c1 + c2))
- MCDCBranch { true: Expression(16, Sub), false: Expression(17, Add), condition_id: 1, true_next_id: 3, false_next_id: 2 } at (prev + 0, 13) to (start + 0, 20)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Expression(15, Sub), false: Counter(4), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 20) to (start + 0, 27)
    true  = ((c0 - (c1 + c2)) - c4)
    false = c4
- MCDCBranch { true: Counter(1), false: Expression(11, Add), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 31) to (start + 0, 40)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Expression(14, Add)) at (prev + 0, 42) to (start + 0, 63)
    = (c1 + ((c0 - (c1 + c2)) - c4))
- MCDCBranch { true: Counter(6), false: Expression(18, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 42) to (start + 0, 51)
    true  = c6
    false = (c5 + c3)
- MCDCBranch { true: Counter(5), false: Expression(19, Add), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 54) to (start + 0, 63)
    true  = c5
    false = (c6 + c3)
- Code(Counter(0)) at (prev + 0, 67) to (start + 0, 70)
- Code(Expression(0, Add)) at (prev + 0, 71) to (start + 2, 6)
    = (c5 + c6)
- Code(Expression(55, Add)) at (prev + 2, 6) to (start + 0, 7)
    = ((c2 + c3) + c4)
- MCDCDecision { bitmap_idx: 4, conditions_num: 5 } at (prev + 3, 12) to (start + 0, 64)
- Branch { true: Expression(67, Add), false: Expression(64, Add) } at (prev + 0, 12) to (start + 0, 64)
    true  = (((c12 + c13) + c14) + c15)
    false = (((c8 + c9) + c10) + c11)
- MCDCBranch { true: Expression(41, Sub), false: Expression(45, Add), condition_id: 1, true_next_id: 3, false_next_id: 2 } at (prev + 0, 13) to (start + 0, 20)
    true  = ((((c2 + c3) + c4) + (c5 + c6)) - (c7 + c8))
    false = (c7 + c8)
- MCDCBranch { true: Expression(34, Sub), false: Counter(10), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 20) to (start + 0, 27)
    true  = (((((c2 + c3) + c4) + (c5 + c6)) - (c7 + c8)) - c10)
    false = c10
- Code(Counter(15)) at (prev + 0, 25) to (start + 0, 26)
- MCDCBranch { true: Counter(7), false: Expression(40, Add), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 31) to (start + 0, 40)
    true  = c7
    false = (((((c2 + c3) + c4) + (c5 + c6)) - (c7 + c8)) + c8)
- Code(Counter(13)) at (prev + 0, 38) to (start + 0, 39)
- MCDCBranch { true: Expression(46, Add), false: Expression(47, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 42) to (start + 0, 51)
    true  = (c15 + c13)
    false = (((c14 + c11) + c12) + c9)
- Code(Counter(15)) at (prev + 0, 49) to (start + 0, 50)
- MCDCBranch { true: Expression(50, Add), false: Expression(51, Add), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 54) to (start + 0, 63)
    true  = (c14 + c12)
    false = (((c15 + c11) + c13) + c9)
- Code(Counter(14)) at (prev + 0, 61) to (start + 0, 62)
- Code(Expression(54, Add)) at (prev + 0, 67) to (start + 0, 70)
    = (((c2 + c3) + c4) + (c5 + c6))
- Code(Expression(67, Add)) at (prev + 0, 71) to (start + 2, 6)
    = (((c12 + c13) + c14) + c15)
- Code(Expression(64, Add)) at (prev + 2, 6) to (start + 0, 7)
    = (((c8 + c9) + c10) + c11)
- Code(Expression(63, Add)) at (prev + 1, 1) to (start + 0, 2)
    = ((((c8 + c9) + c10) + c11) + (((c12 + c13) + c14) + c15))

Function name: if_let::joint_pattern_with_or
Raw bytes (120): 0x[01, 01, 10, 22, 1b, 01, 05, 11, 09, 11, 15, 3b, 0d, 05, 09, 11, 09, 02, 09, 01, 05, 11, 15, 3b, 0d, 05, 09, 37, 3f, 3b, 0d, 05, 09, 11, 15, 0c, 01, 20, 01, 00, 2b, 02, 01, 0c, 00, 34, 28, 00, 04, 00, 0c, 00, 34, 20, 3f, 37, 00, 0c, 00, 34, 30, 02, 1b, 02, 04, 03, 00, 0d, 00, 14, 30, 15, 0d, 04, 00, 00, 00, 14, 00, 1b, 30, 11, 1f, 03, 00, 00, 00, 1f, 00, 28, 30, 22, 05, 01, 02, 00, 00, 2a, 00, 33, 01, 00, 37, 00, 3a, 3f, 00, 3b, 02, 06, 37, 02, 06, 00, 07, 33, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 16
- expression 0 operands: lhs = Expression(8, Sub), rhs = Expression(6, Add)
- expression 1 operands: lhs = Counter(0), rhs = Counter(1)
- expression 2 operands: lhs = Counter(4), rhs = Counter(2)
- expression 3 operands: lhs = Counter(4), rhs = Counter(5)
- expression 4 operands: lhs = Expression(14, Add), rhs = Counter(3)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
- expression 6 operands: lhs = Counter(4), rhs = Counter(2)
- expression 7 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 8 operands: lhs = Counter(0), rhs = Counter(1)
- expression 9 operands: lhs = Counter(4), rhs = Counter(5)
- expression 10 operands: lhs = Expression(14, Add), rhs = Counter(3)
- expression 11 operands: lhs = Counter(1), rhs = Counter(2)
- expression 12 operands: lhs = Expression(13, Add), rhs = Expression(15, Add)
- expression 13 operands: lhs = Expression(14, Add), rhs = Counter(3)
- expression 14 operands: lhs = Counter(1), rhs = Counter(2)
- expression 15 operands: lhs = Counter(4), rhs = Counter(5)
Number of file 0 mappings: 12
- Code(Counter(0)) at (prev + 32, 1) to (start + 0, 43)
- Code(Expression(0, Sub)) at (prev + 1, 12) to (start + 0, 52)
    = ((c0 - c1) - (c4 + c2))
- MCDCDecision { bitmap_idx: 0, conditions_num: 4 } at (prev + 0, 12) to (start + 0, 52)
- Branch { true: Expression(15, Add), false: Expression(13, Add) } at (prev + 0, 12) to (start + 0, 52)
    true  = (c4 + c5)
    false = ((c1 + c2) + c3)
- MCDCBranch { true: Expression(0, Sub), false: Expression(6, Add), condition_id: 2, true_next_id: 4, false_next_id: 3 } at (prev + 0, 13) to (start + 0, 20)
    true  = ((c0 - c1) - (c4 + c2))
    false = (c4 + c2)
- MCDCBranch { true: Counter(5), false: Counter(3), condition_id: 4, true_next_id: 0, false_next_id: 0 } at (prev + 0, 20) to (start + 0, 27)
    true  = c5
    false = c3
- MCDCBranch { true: Counter(4), false: Expression(7, Add), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 31) to (start + 0, 40)
    true  = c4
    false = (((c0 - c1) - (c4 + c2)) + c2)
- MCDCBranch { true: Expression(8, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 42) to (start + 0, 51)
    true  = (c0 - c1)
    false = c1
- Code(Counter(0)) at (prev + 0, 55) to (start + 0, 58)
- Code(Expression(15, Add)) at (prev + 0, 59) to (start + 2, 6)
    = (c4 + c5)
- Code(Expression(13, Add)) at (prev + 2, 6) to (start + 0, 7)
    = ((c1 + c2) + c3)
- Code(Expression(12, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (((c1 + c2) + c3) + (c4 + c5))

Function name: if_let::let_else
Raw bytes (71): 0x[01, 01, 04, 05, 09, 01, 05, 01, 05, 03, 0d, 09, 01, 31, 01, 00, 19, 28, 00, 02, 01, 09, 00, 18, 20, 0d, 03, 00, 09, 00, 18, 30, 0a, 05, 01, 02, 00, 00, 09, 00, 10, 30, 0d, 09, 02, 00, 00, 00, 10, 00, 17, 0a, 00, 1b, 00, 20, 03, 00, 28, 00, 2e, 0d, 01, 05, 00, 13, 0f, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 4
- expression 0 operands: lhs = Counter(1), rhs = Counter(2)
- expression 1 operands: lhs = Counter(0), rhs = Counter(1)
- expression 2 operands: lhs = Counter(0), rhs = Counter(1)
- expression 3 operands: lhs = Expression(0, Add), rhs = Counter(3)
Number of file 0 mappings: 9
- Code(Counter(0)) at (prev + 49, 1) to (start + 0, 25)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 24)
- Branch { true: Counter(3), false: Expression(0, Add) } at (prev + 0, 9) to (start + 0, 24)
    true  = c3
    false = (c1 + c2)
- MCDCBranch { true: Expression(2, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 16)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(3), false: Counter(2), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 23)
    true  = c3
    false = c2
- Code(Expression(2, Sub)) at (prev + 0, 27) to (start + 0, 32)
    = (c0 - c1)
- Code(Expression(0, Add)) at (prev + 0, 40) to (start + 0, 46)
    = (c1 + c2)
- Code(Counter(3)) at (prev + 1, 5) to (start + 0, 19)
- Code(Expression(3, Add)) at (prev + 1, 1) to (start + 0, 2)
    = ((c1 + c2) + c3)

Function name: if_let::main
Raw bytes (9): 0x[01, 01, 00, 01, 01, 36, 01, 17, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 1
- Code(Counter(0)) at (prev + 54, 1) to (start + 23, 2)

Function name: if_let::simple_joint_pattern
Raw bytes (98): 0x[01, 01, 0a, 12, 09, 01, 05, 27, 0d, 05, 09, 01, 05, 27, 0d, 05, 09, 23, 11, 27, 0d, 05, 09, 0b, 01, 1a, 01, 00, 2a, 02, 01, 0c, 00, 28, 28, 00, 03, 00, 0c, 00, 28, 20, 11, 23, 00, 0c, 00, 28, 30, 12, 05, 01, 02, 00, 00, 0d, 00, 14, 30, 11, 0d, 03, 00, 00, 00, 14, 00, 1b, 30, 02, 09, 02, 03, 00, 00, 1e, 00, 27, 01, 00, 2b, 00, 2e, 11, 00, 2f, 02, 06, 23, 02, 06, 00, 07, 1f, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 10
- expression 0 operands: lhs = Expression(4, Sub), rhs = Counter(2)
- expression 1 operands: lhs = Counter(0), rhs = Counter(1)
- expression 2 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 3 operands: lhs = Counter(1), rhs = Counter(2)
- expression 4 operands: lhs = Counter(0), rhs = Counter(1)
- expression 5 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 6 operands: lhs = Counter(1), rhs = Counter(2)
- expression 7 operands: lhs = Expression(8, Add), rhs = Counter(4)
- expression 8 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 9 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 26, 1) to (start + 0, 42)
- Code(Expression(0, Sub)) at (prev + 1, 12) to (start + 0, 40)
    = ((c0 - c1) - c2)
- MCDCDecision { bitmap_idx: 0, conditions_num: 3 } at (prev + 0, 12) to (start + 0, 40)
- Branch { true: Counter(4), false: Expression(8, Add) } at (prev + 0, 12) to (start + 0, 40)
    true  = c4
    false = ((c1 + c2) + c3)
- MCDCBranch { true: Expression(4, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 20)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(4), false: Counter(3), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 20) to (start + 0, 27)
    true  = c4
    false = c3
- MCDCBranch { true: Expression(0, Sub), false: Counter(2), condition_id: 2, true_next_id: 3, false_next_id: 0 } at (prev + 0, 30) to (start + 0, 39)
    true  = ((c0 - c1) - c2)
    false = c2
- Code(Counter(0)) at (prev + 0, 43) to (start + 0, 46)
- Code(Counter(4)) at (prev + 0, 47) to (start + 2, 6)
- Code(Expression(8, Add)) at (prev + 2, 6) to (start + 0, 7)
    = ((c1 + c2) + c3)
- Code(Expression(7, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (((c1 + c2) + c3) + c4)

Function name: if_let::simple_or_pattern
Raw bytes (78): 0x[01, 01, 0a, 05, 1e, 01, 23, 05, 09, 01, 23, 05, 09, 05, 09, 1e, 09, 01, 23, 05, 09, 09, 03, 08, 01, 14, 01, 01, 27, 28, 00, 02, 01, 0c, 00, 21, 20, 03, 09, 00, 0c, 00, 21, 30, 1e, 23, 01, 00, 02, 00, 0c, 00, 15, 30, 05, 1b, 02, 00, 00, 00, 18, 00, 21, 03, 00, 28, 02, 06, 09, 02, 06, 00, 07, 27, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 10
- expression 0 operands: lhs = Counter(1), rhs = Expression(7, Sub)
- expression 1 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
- expression 6 operands: lhs = Expression(7, Sub), rhs = Counter(2)
- expression 7 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 8 operands: lhs = Counter(1), rhs = Counter(2)
- expression 9 operands: lhs = Counter(2), rhs = Expression(0, Add)
Number of file 0 mappings: 8
- Code(Counter(0)) at (prev + 20, 1) to (start + 1, 39)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 1, 12) to (start + 0, 33)
- Branch { true: Expression(0, Add), false: Counter(2) } at (prev + 0, 12) to (start + 0, 33)
    true  = (c1 + (c0 - (c1 + c2)))
    false = c2
- MCDCBranch { true: Expression(7, Sub), false: Expression(8, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 12) to (start + 0, 21)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(1), false: Expression(6, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 24) to (start + 0, 33)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Expression(0, Add)) at (prev + 0, 40) to (start + 2, 6)
    = (c1 + (c0 - (c1 + c2)))
- Code(Counter(2)) at (prev + 2, 6) to (start + 0, 7)
- Code(Expression(9, Add)) at (prev + 1, 1) to (start + 0, 2)
    = (c2 + (c1 + (c0 - (c1 + c2))))

Function name: if_let::single_nested_pattern
Raw bytes (78): 0x[01, 01, 05, 01, 05, 05, 09, 05, 09, 13, 0d, 05, 09, 0a, 01, 0e, 01, 00, 24, 02, 01, 0c, 00, 1b, 28, 00, 02, 00, 0c, 00, 1b, 20, 0d, 13, 00, 0c, 00, 1b, 30, 02, 05, 01, 02, 00, 00, 0c, 00, 13, 30, 0d, 09, 02, 00, 00, 00, 13, 00, 1a, 01, 00, 1e, 00, 21, 0d, 00, 22, 02, 06, 13, 02, 06, 00, 07, 0f, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 5
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(4, Add), rhs = Counter(3)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 10
- Code(Counter(0)) at (prev + 14, 1) to (start + 0, 36)
- Code(Expression(0, Sub)) at (prev + 1, 12) to (start + 0, 27)
    = (c0 - c1)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 0, 12) to (start + 0, 27)
- Branch { true: Counter(3), false: Expression(4, Add) } at (prev + 0, 12) to (start + 0, 27)
    true  = c3
    false = (c1 + c2)
- MCDCBranch { true: Expression(0, Sub), false: Counter(1), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 12) to (start + 0, 19)
    true  = (c0 - c1)
    false = c1
- MCDCBranch { true: Counter(3), false: Counter(2), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 19) to (start + 0, 26)
    true  = c3
    false = c2
- Code(Counter(0)) at (prev + 0, 30) to (start + 0, 33)
- Code(Counter(3)) at (prev + 0, 34) to (start + 2, 6)
- Code(Expression(4, Add)) at (prev + 2, 6) to (start + 0, 7)
    = (c1 + c2)
- Code(Expression(3, Add)) at (prev + 1, 1) to (start + 0, 2)
    = ((c1 + c2) + c3)

