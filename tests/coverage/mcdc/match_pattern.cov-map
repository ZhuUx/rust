Function name: match_pattern::joint_or_patterns
Raw bytes (607): 0x[01, 01, 78, 07, 15, 0b, 0d, 09, 11, 01, d7, 02, 05, 09, 01, d7, 02, 05, 09, 05, 09, d2, 02, 0d, 01, d7, 02, 05, 09, d2, 02, 09, 01, d7, 02, 05, 09, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 1d, 11, c6, 02, 11, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 1d, c6, 02, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 02, 19, 02, 19, 15, 19, b3, 03, 3d, b7, 03, 49, bb, 03, 29, 25, 31, b3, 02, df, 02, b7, 02, c3, 02, bb, 02, be, 02, 15, 19, 02, 19, 1d, c6, 02, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 21, 25, 21, 25, ae, 02, 29, b3, 02, df, 02, b7, 02, c3, 02, bb, 02, be, 02, 15, 19, 02, 19, 1d, c6, 02, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 21, 25, ae, 02, 25, b3, 02, df, 02, b7, 02, c3, 02, bb, 02, be, 02, 15, 19, 02, 19, 1d, c6, 02, cb, 02, db, 02, 05, ce, 02, d2, 02, 0d, 01, d7, 02, 05, 09, 1d, 11, 21, 25, 21, df, 03, 2d, 31, 39, da, 03, 21, df, 03, 2d, 31, fb, 02, 31, ff, 02, 2d, 35, 49, 35, 2d, 8b, 03, 31, 8f, 03, da, 03, 39, 49, 21, df, 03, 2d, 31, d3, 03, 39, d7, 03, 35, 2d, da, 03, 21, df, 03, 2d, 31, b3, 03, 3d, b7, 03, 49, bb, 03, 29, 25, 31, 3d, 41, c7, 03, cf, 03, cb, 03, 45, 3d, 41, d3, 03, 39, d7, 03, 35, 2d, da, 03, 21, df, 03, 2d, 31, 22, 01, 2e, 01, 00, 27, 02, 01, 0b, 00, 0e, 28, 00, 05, 01, 09, 00, 3d, d2, 02, 00, 0a, 00, 25, 30, d2, 02, d7, 02, 01, 03, 02, 00, 0a, 00, 11, 30, ce, 02, 0d, 03, 04, 00, 00, 11, 00, 18, 30, 05, 2f, 02, 04, 00, 00, 1c, 00, 25, cb, 02, 00, 27, 00, 3c, 30, c6, 02, db, 02, 04, 00, 05, 00, 27, 00, 30, 30, 1d, 67, 05, 00, 00, 00, 33, 00, 3c, c3, 02, 00, 41, 00, 63, 28, 04, 02, 01, 09, 00, 1f, 30, 02, 15, 01, 02, 00, 00, 0a, 00, 13, 30, be, 02, 19, 02, 00, 00, 00, 15, 00, 1e, be, 02, 00, 23, 00, 39, bb, 02, 01, 0e, 00, 23, ae, 03, 04, 0b, 00, 0e, 28, 05, 05, 01, 09, 00, 3d, 30, ae, 02, df, 02, 01, 03, 02, 00, 0a, 00, 11, 30, f2, 01, 29, 03, 04, 00, 00, 11, 00, 18, 39, 00, 16, 00, 17, 30, 21, ab, 02, 02, 04, 00, 00, 1c, 00, 25, da, 03, 00, 23, 00, 24, 30, eb, 02, f7, 02, 04, 00, 05, 00, 27, 00, 30, 39, 00, 2e, 00, 2f, 30, 83, 03, 87, 03, 05, 00, 00, 00, 33, 00, 3c, 35, 00, 3a, 00, 3b, cf, 03, 01, 0d, 00, 45, 28, 09, 02, 02, 09, 00, 1f, 30, ae, 03, 3d, 01, 02, 00, 00, 0a, 00, 13, 30, 45, 41, 02, 00, 00, 00, 15, 00, 1e, 45, 00, 23, 00, 39, cb, 03, 01, 0e, 00, 23, c3, 03, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 120
- expression 0 operands: lhs = Expression(1, Add), rhs = Counter(5)
- expression 1 operands: lhs = Expression(2, Add), rhs = Counter(3)
- expression 2 operands: lhs = Counter(2), rhs = Counter(4)
- expression 3 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 6 operands: lhs = Counter(1), rhs = Counter(2)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
- expression 8 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 9 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 10 operands: lhs = Counter(1), rhs = Counter(2)
- expression 11 operands: lhs = Expression(84, Sub), rhs = Counter(2)
- expression 12 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 13 operands: lhs = Counter(1), rhs = Counter(2)
- expression 14 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 15 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 16 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 17 operands: lhs = Counter(1), rhs = Counter(2)
- expression 18 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 19 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 20 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 21 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 22 operands: lhs = Counter(1), rhs = Counter(2)
- expression 23 operands: lhs = Counter(7), rhs = Counter(4)
- expression 24 operands: lhs = Counter(7), rhs = Counter(4)
- expression 25 operands: lhs = Expression(81, Sub), rhs = Counter(4)
- expression 26 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 27 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 28 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 29 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 30 operands: lhs = Counter(1), rhs = Counter(2)
- expression 31 operands: lhs = Counter(7), rhs = Counter(4)
- expression 32 operands: lhs = Counter(7), rhs = Expression(81, Sub)
- expression 33 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 34 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 35 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 36 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 37 operands: lhs = Counter(1), rhs = Counter(2)
- expression 38 operands: lhs = Counter(7), rhs = Counter(4)
- expression 39 operands: lhs = Expression(0, Sub), rhs = Counter(6)
- expression 40 operands: lhs = Expression(0, Sub), rhs = Counter(6)
- expression 41 operands: lhs = Counter(5), rhs = Counter(6)
- expression 42 operands: lhs = Expression(108, Add), rhs = Counter(15)
- expression 43 operands: lhs = Expression(109, Add), rhs = Counter(18)
- expression 44 operands: lhs = Expression(110, Add), rhs = Counter(10)
- expression 45 operands: lhs = Counter(9), rhs = Counter(12)
- expression 46 operands: lhs = Expression(76, Add), rhs = Expression(87, Add)
- expression 47 operands: lhs = Expression(77, Add), rhs = Expression(80, Add)
- expression 48 operands: lhs = Expression(78, Add), rhs = Expression(79, Sub)
- expression 49 operands: lhs = Counter(5), rhs = Counter(6)
- expression 50 operands: lhs = Expression(0, Sub), rhs = Counter(6)
- expression 51 operands: lhs = Counter(7), rhs = Expression(81, Sub)
- expression 52 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 53 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 54 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 55 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 56 operands: lhs = Counter(1), rhs = Counter(2)
- expression 57 operands: lhs = Counter(7), rhs = Counter(4)
- expression 58 operands: lhs = Counter(8), rhs = Counter(9)
- expression 59 operands: lhs = Counter(8), rhs = Counter(9)
- expression 60 operands: lhs = Expression(75, Sub), rhs = Counter(10)
- expression 61 operands: lhs = Expression(76, Add), rhs = Expression(87, Add)
- expression 62 operands: lhs = Expression(77, Add), rhs = Expression(80, Add)
- expression 63 operands: lhs = Expression(78, Add), rhs = Expression(79, Sub)
- expression 64 operands: lhs = Counter(5), rhs = Counter(6)
- expression 65 operands: lhs = Expression(0, Sub), rhs = Counter(6)
- expression 66 operands: lhs = Counter(7), rhs = Expression(81, Sub)
- expression 67 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 68 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 69 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 70 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 71 operands: lhs = Counter(1), rhs = Counter(2)
- expression 72 operands: lhs = Counter(7), rhs = Counter(4)
- expression 73 operands: lhs = Counter(8), rhs = Counter(9)
- expression 74 operands: lhs = Expression(75, Sub), rhs = Counter(9)
- expression 75 operands: lhs = Expression(76, Add), rhs = Expression(87, Add)
- expression 76 operands: lhs = Expression(77, Add), rhs = Expression(80, Add)
- expression 77 operands: lhs = Expression(78, Add), rhs = Expression(79, Sub)
- expression 78 operands: lhs = Counter(5), rhs = Counter(6)
- expression 79 operands: lhs = Expression(0, Sub), rhs = Counter(6)
- expression 80 operands: lhs = Counter(7), rhs = Expression(81, Sub)
- expression 81 operands: lhs = Expression(82, Add), rhs = Expression(86, Add)
- expression 82 operands: lhs = Counter(1), rhs = Expression(83, Sub)
- expression 83 operands: lhs = Expression(84, Sub), rhs = Counter(3)
- expression 84 operands: lhs = Counter(0), rhs = Expression(85, Add)
- expression 85 operands: lhs = Counter(1), rhs = Counter(2)
- expression 86 operands: lhs = Counter(7), rhs = Counter(4)
- expression 87 operands: lhs = Counter(8), rhs = Counter(9)
- expression 88 operands: lhs = Counter(8), rhs = Expression(119, Add)
- expression 89 operands: lhs = Counter(11), rhs = Counter(12)
- expression 90 operands: lhs = Counter(14), rhs = Expression(118, Sub)
- expression 91 operands: lhs = Counter(8), rhs = Expression(119, Add)
- expression 92 operands: lhs = Counter(11), rhs = Counter(12)
- expression 93 operands: lhs = Expression(94, Add), rhs = Counter(12)
- expression 94 operands: lhs = Expression(95, Add), rhs = Counter(11)
- expression 95 operands: lhs = Counter(13), rhs = Counter(18)
- expression 96 operands: lhs = Counter(13), rhs = Counter(11)
- expression 97 operands: lhs = Expression(98, Add), rhs = Counter(12)
- expression 98 operands: lhs = Expression(99, Add), rhs = Expression(118, Sub)
- expression 99 operands: lhs = Counter(14), rhs = Counter(18)
- expression 100 operands: lhs = Counter(8), rhs = Expression(119, Add)
- expression 101 operands: lhs = Counter(11), rhs = Counter(12)
- expression 102 operands: lhs = Expression(116, Add), rhs = Counter(14)
- expression 103 operands: lhs = Expression(117, Add), rhs = Counter(13)
- expression 104 operands: lhs = Counter(11), rhs = Expression(118, Sub)
- expression 105 operands: lhs = Counter(8), rhs = Expression(119, Add)
- expression 106 operands: lhs = Counter(11), rhs = Counter(12)
- expression 107 operands: lhs = Expression(108, Add), rhs = Counter(15)
- expression 108 operands: lhs = Expression(109, Add), rhs = Counter(18)
- expression 109 operands: lhs = Expression(110, Add), rhs = Counter(10)
- expression 110 operands: lhs = Counter(9), rhs = Counter(12)
- expression 111 operands: lhs = Counter(15), rhs = Counter(16)
- expression 112 operands: lhs = Expression(113, Add), rhs = Expression(115, Add)
- expression 113 operands: lhs = Expression(114, Add), rhs = Counter(17)
- expression 114 operands: lhs = Counter(15), rhs = Counter(16)
- expression 115 operands: lhs = Expression(116, Add), rhs = Counter(14)
- expression 116 operands: lhs = Expression(117, Add), rhs = Counter(13)
- expression 117 operands: lhs = Counter(11), rhs = Expression(118, Sub)
- expression 118 operands: lhs = Counter(8), rhs = Expression(119, Add)
- expression 119 operands: lhs = Counter(11), rhs = Counter(12)
Number of file 0 mappings: 34
- Code(Counter(0)) at (prev + 46, 1) to (start + 0, 39)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = (((c2 + c4) + c3) - c5)
- MCDCDecision { bitmap_idx: 0, conditions_num: 5 } at (prev + 1, 9) to (start + 0, 61)
- Code(Expression(84, Sub)) at (prev + 0, 10) to (start + 0, 37)
    = (c0 - (c1 + c2))
- MCDCBranch { true: Expression(84, Sub), false: Expression(85, Add), condition_id: 1, true_next_id: 3, false_next_id: 2 } at (prev + 0, 10) to (start + 0, 17)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Expression(83, Sub), false: Counter(3), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = ((c0 - (c1 + c2)) - c3)
    false = c3
- MCDCBranch { true: Counter(1), false: Expression(11, Add), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Expression(82, Add)) at (prev + 0, 39) to (start + 0, 60)
    = (c1 + ((c0 - (c1 + c2)) - c3))
- MCDCBranch { true: Expression(81, Sub), false: Expression(86, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 39) to (start + 0, 48)
    true  = ((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4))
    false = (c7 + c4)
- MCDCBranch { true: Counter(7), false: Expression(25, Add), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 51) to (start + 0, 60)
    true  = c7
    false = (((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4)) + c4)
- Code(Expression(80, Add)) at (prev + 0, 65) to (start + 0, 99)
    = (c7 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4)))
- MCDCDecision { bitmap_idx: 4, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Expression(0, Sub), false: Counter(5), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = (((c2 + c4) + c3) - c5)
    false = c5
- MCDCBranch { true: Expression(79, Sub), false: Counter(6), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = ((((c2 + c4) + c3) - c5) - c6)
    false = c6
- Code(Expression(79, Sub)) at (prev + 0, 35) to (start + 0, 57)
    = ((((c2 + c4) + c3) - c5) - c6)
- Code(Expression(78, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c5 + c6)
- Code(Expression(107, Sub)) at (prev + 4, 11) to (start + 0, 14)
    = ((((c9 + c12) + c10) + c18) - c15)
- MCDCDecision { bitmap_idx: 5, conditions_num: 5 } at (prev + 1, 9) to (start + 0, 61)
- MCDCBranch { true: Expression(75, Sub), false: Expression(87, Add), condition_id: 1, true_next_id: 3, false_next_id: 2 } at (prev + 0, 10) to (start + 0, 17)
    true  = ((((c5 + c6) + ((((c2 + c4) + c3) - c5) - c6)) + (c7 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4)))) - (c8 + c9))
    false = (c8 + c9)
- MCDCBranch { true: Expression(60, Sub), false: Counter(10), condition_id: 3, true_next_id: 4, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = (((((c5 + c6) + ((((c2 + c4) + c3) - c5) - c6)) + (c7 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4)))) - (c8 + c9)) - c10)
    false = c10
- Code(Counter(14)) at (prev + 0, 22) to (start + 0, 23)
- MCDCBranch { true: Counter(8), false: Expression(74, Add), condition_id: 2, true_next_id: 4, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c8
    false = (((((c5 + c6) + ((((c2 + c4) + c3) - c5) - c6)) + (c7 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c7 + c4)))) - (c8 + c9)) + c9)
- Code(Expression(118, Sub)) at (prev + 0, 35) to (start + 0, 36)
    = (c8 - (c11 + c12))
- MCDCBranch { true: Expression(90, Add), false: Expression(93, Add), condition_id: 4, true_next_id: 0, false_next_id: 5 } at (prev + 0, 39) to (start + 0, 48)
    true  = (c14 + (c8 - (c11 + c12)))
    false = (((c13 + c18) + c11) + c12)
- Code(Counter(14)) at (prev + 0, 46) to (start + 0, 47)
- MCDCBranch { true: Expression(96, Add), false: Expression(97, Add), condition_id: 5, true_next_id: 0, false_next_id: 0 } at (prev + 0, 51) to (start + 0, 60)
    true  = (c13 + c11)
    false = (((c14 + c18) + (c8 - (c11 + c12))) + c12)
- Code(Counter(13)) at (prev + 0, 58) to (start + 0, 59)
- Code(Expression(115, Add)) at (prev + 1, 13) to (start + 0, 69)
    = (((c11 + (c8 - (c11 + c12))) + c13) + c14)
- MCDCDecision { bitmap_idx: 9, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 31)
- MCDCBranch { true: Expression(107, Sub), false: Counter(15), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = ((((c9 + c12) + c10) + c18) - c15)
    false = c15
- MCDCBranch { true: Counter(17), false: Counter(16), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c17
    false = c16
- Code(Counter(17)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(114, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c15 + c16)
- Code(Expression(112, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c15 + c16) + c17) + (((c11 + (c8 - (c11 + c12))) + c13) + c14))

Function name: match_pattern::joint_pattern_with_or
Raw bytes (152): 0x[01, 01, 16, 2e, 13, 01, 33, 05, 09, 1d, 11, 1d, 11, 02, 11, 01, 33, 05, 09, 05, 09, 1d, 21, 2e, 09, 01, 33, 05, 09, 4f, 15, 53, 11, 09, 0d, 47, 57, 4b, 19, 4f, 15, 53, 11, 09, 0d, 1d, 21, 0e, 01, 26, 01, 00, 2b, 02, 01, 0b, 00, 0e, 28, 00, 04, 01, 09, 00, 31, 30, 02, 13, 02, 04, 03, 00, 0a, 00, 11, 30, 21, 15, 04, 00, 00, 00, 11, 00, 18, 30, 1d, 17, 03, 00, 00, 00, 1c, 00, 25, 30, 2e, 33, 01, 02, 00, 00, 27, 00, 30, 57, 00, 35, 00, 53, 28, 02, 02, 01, 09, 00, 1f, 30, 19, 0d, 02, 00, 00, 00, 0a, 00, 13, 30, 05, 2b, 01, 02, 00, 00, 15, 00, 1e, 19, 00, 23, 00, 39, 4b, 01, 0e, 00, 23, 43, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 22
- expression 0 operands: lhs = Expression(11, Sub), rhs = Expression(4, Add)
- expression 1 operands: lhs = Counter(0), rhs = Expression(12, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(7), rhs = Counter(4)
- expression 4 operands: lhs = Counter(7), rhs = Counter(4)
- expression 5 operands: lhs = Expression(0, Sub), rhs = Counter(4)
- expression 6 operands: lhs = Counter(0), rhs = Expression(12, Add)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
- expression 8 operands: lhs = Counter(1), rhs = Counter(2)
- expression 9 operands: lhs = Counter(7), rhs = Counter(8)
- expression 10 operands: lhs = Expression(11, Sub), rhs = Counter(2)
- expression 11 operands: lhs = Counter(0), rhs = Expression(12, Add)
- expression 12 operands: lhs = Counter(1), rhs = Counter(2)
- expression 13 operands: lhs = Expression(19, Add), rhs = Counter(5)
- expression 14 operands: lhs = Expression(20, Add), rhs = Counter(4)
- expression 15 operands: lhs = Counter(2), rhs = Counter(3)
- expression 16 operands: lhs = Expression(17, Add), rhs = Expression(21, Add)
- expression 17 operands: lhs = Expression(18, Add), rhs = Counter(6)
- expression 18 operands: lhs = Expression(19, Add), rhs = Counter(5)
- expression 19 operands: lhs = Expression(20, Add), rhs = Counter(4)
- expression 20 operands: lhs = Counter(2), rhs = Counter(3)
- expression 21 operands: lhs = Counter(7), rhs = Counter(8)
Number of file 0 mappings: 14
- Code(Counter(0)) at (prev + 38, 1) to (start + 0, 43)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - (c7 + c4))
- MCDCDecision { bitmap_idx: 0, conditions_num: 4 } at (prev + 1, 9) to (start + 0, 49)
- MCDCBranch { true: Expression(0, Sub), false: Expression(4, Add), condition_id: 2, true_next_id: 4, false_next_id: 3 } at (prev + 0, 10) to (start + 0, 17)
    true  = ((c0 - (c1 + c2)) - (c7 + c4))
    false = (c7 + c4)
- MCDCBranch { true: Counter(8), false: Counter(5), condition_id: 4, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = c8
    false = c5
- MCDCBranch { true: Counter(7), false: Expression(5, Add), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 37)
    true  = c7
    false = (((c0 - (c1 + c2)) - (c7 + c4)) + c4)
- MCDCBranch { true: Expression(11, Sub), false: Expression(12, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 39) to (start + 0, 48)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- Code(Expression(21, Add)) at (prev + 0, 53) to (start + 0, 83)
    = (c7 + c8)
- MCDCDecision { bitmap_idx: 2, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(6), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c6
    false = c3
- MCDCBranch { true: Counter(1), false: Expression(10, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(18, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(16, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + (c7 + c8))

Function name: match_pattern::main
Raw bytes (9): 0x[01, 01, 00, 01, 01, 47, 01, 17, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 1
- Code(Counter(0)) at (prev + 71, 1) to (start + 23, 2)

Function name: match_pattern::partial_matched
Raw bytes (85): 0x[01, 01, 06, 01, 05, 02, 09, 05, 09, 13, 11, 17, 0d, 05, 09, 0b, 01, 3f, 01, 01, 0e, 28, 00, 02, 02, 09, 00, 23, 30, 05, 02, 01, 00, 02, 00, 09, 00, 13, 05, 00, 0a, 00, 12, 30, 09, 06, 02, 00, 00, 00, 16, 00, 23, 09, 00, 1a, 00, 22, 17, 00, 27, 00, 4f, 20, 0d, 11, 01, 09, 00, 1d, 0d, 00, 10, 00, 49, 11, 01, 0e, 00, 23, 0f, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 6
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(4, Add), rhs = Counter(4)
- expression 4 operands: lhs = Expression(5, Add), rhs = Counter(3)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 63, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 35)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 19)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 10) to (start + 0, 18)
- MCDCBranch { true: Counter(2), false: Expression(1, Sub), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 22) to (start + 0, 35)
    true  = c2
    false = ((c0 - c1) - c2)
- Code(Counter(2)) at (prev + 0, 26) to (start + 0, 34)
- Code(Expression(5, Add)) at (prev + 0, 39) to (start + 0, 79)
    = (c1 + c2)
- Branch { true: Counter(3), false: Counter(4) } at (prev + 1, 9) to (start + 0, 29)
    true  = c3
    false = c4
- Code(Counter(3)) at (prev + 0, 16) to (start + 0, 73)
- Code(Counter(4)) at (prev + 1, 14) to (start + 0, 35)
- Code(Expression(3, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c1 + c2) + c3) + c4)

Function name: match_pattern::simple_joint_pattern
Raw bytes (132): 0x[01, 01, 11, 1e, 11, 01, 23, 05, 09, 01, 23, 05, 09, 05, 09, 1e, 09, 01, 23, 05, 09, 3f, 15, 43, 11, 09, 0d, 37, 1d, 3b, 19, 3f, 15, 43, 11, 09, 0d, 0d, 01, 1e, 01, 00, 2a, 02, 01, 0b, 00, 0e, 28, 00, 03, 01, 09, 00, 25, 30, 1e, 23, 01, 02, 00, 00, 0a, 00, 11, 30, 1d, 15, 03, 00, 00, 00, 11, 00, 18, 30, 02, 11, 02, 03, 00, 00, 1b, 00, 24, 1d, 00, 29, 00, 43, 28, 01, 02, 01, 09, 00, 1f, 30, 05, 1b, 01, 02, 00, 00, 0a, 00, 13, 30, 19, 0d, 02, 00, 00, 00, 15, 00, 1e, 19, 00, 23, 00, 39, 3b, 01, 0e, 00, 23, 33, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 17
- expression 0 operands: lhs = Expression(7, Sub), rhs = Counter(4)
- expression 1 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(1), rhs = Counter(2)
- expression 6 operands: lhs = Expression(7, Sub), rhs = Counter(2)
- expression 7 operands: lhs = Counter(0), rhs = Expression(8, Add)
- expression 8 operands: lhs = Counter(1), rhs = Counter(2)
- expression 9 operands: lhs = Expression(15, Add), rhs = Counter(5)
- expression 10 operands: lhs = Expression(16, Add), rhs = Counter(4)
- expression 11 operands: lhs = Counter(2), rhs = Counter(3)
- expression 12 operands: lhs = Expression(13, Add), rhs = Counter(7)
- expression 13 operands: lhs = Expression(14, Add), rhs = Counter(6)
- expression 14 operands: lhs = Expression(15, Add), rhs = Counter(5)
- expression 15 operands: lhs = Expression(16, Add), rhs = Counter(4)
- expression 16 operands: lhs = Counter(2), rhs = Counter(3)
Number of file 0 mappings: 13
- Code(Counter(0)) at (prev + 30, 1) to (start + 0, 42)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - c4)
- MCDCDecision { bitmap_idx: 0, conditions_num: 3 } at (prev + 1, 9) to (start + 0, 37)
- MCDCBranch { true: Expression(7, Sub), false: Expression(8, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 17)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(7), false: Counter(5), condition_id: 3, true_next_id: 0, false_next_id: 0 } at (prev + 0, 17) to (start + 0, 24)
    true  = c7
    false = c5
- MCDCBranch { true: Expression(0, Sub), false: Counter(4), condition_id: 2, true_next_id: 3, false_next_id: 0 } at (prev + 0, 27) to (start + 0, 36)
    true  = ((c0 - (c1 + c2)) - c4)
    false = c4
- Code(Counter(7)) at (prev + 0, 41) to (start + 0, 67)
- MCDCDecision { bitmap_idx: 1, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 31)
- MCDCBranch { true: Counter(1), false: Expression(6, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 10) to (start + 0, 19)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- MCDCBranch { true: Counter(6), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c6
    false = c3
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(14, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(12, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + c7)

Function name: match_pattern::simple_or_pattern
Raw bytes (65): 0x[01, 01, 07, 01, 0b, 05, 09, 05, 09, 02, 09, 05, 02, 09, 1b, 05, 02, 07, 01, 17, 01, 01, 0e, 28, 00, 02, 02, 09, 00, 1e, 30, 02, 0b, 01, 00, 02, 00, 09, 00, 12, 30, 05, 0f, 02, 00, 00, 00, 15, 00, 1e, 1b, 00, 22, 00, 37, 09, 01, 0e, 00, 1e, 17, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 7
- expression 0 operands: lhs = Counter(0), rhs = Expression(2, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 4 operands: lhs = Counter(1), rhs = Expression(0, Sub)
- expression 5 operands: lhs = Counter(2), rhs = Expression(6, Add)
- expression 6 operands: lhs = Counter(1), rhs = Expression(0, Sub)
Number of file 0 mappings: 7
- Code(Counter(0)) at (prev + 23, 1) to (start + 1, 14)
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 2, 9) to (start + 0, 30)
- MCDCBranch { true: Expression(0, Sub), false: Expression(2, Add), condition_id: 1, true_next_id: 0, false_next_id: 2 } at (prev + 0, 9) to (start + 0, 18)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(1), false: Expression(3, Add), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 21) to (start + 0, 30)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Expression(6, Add)) at (prev + 0, 34) to (start + 0, 55)
    = (c1 + (c0 - (c1 + c2)))
- Code(Counter(2)) at (prev + 1, 14) to (start + 0, 30)
- Code(Expression(5, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (c2 + (c1 + (c0 - (c1 + c2))))

Function name: match_pattern::single_nested_pattern
Raw bytes (125): 0x[01, 01, 09, 01, 0f, 05, 09, 05, 09, 05, 09, 02, 09, 02, 05, 1f, 11, 23, 0d, 09, 05, 0f, 01, 0e, 01, 00, 24, 02, 01, 0b, 00, 0e, 28, 00, 02, 01, 09, 00, 18, 30, 02, 0f, 01, 02, 00, 00, 09, 00, 10, 30, 0d, 11, 02, 00, 00, 00, 10, 00, 17, 0d, 00, 1c, 00, 32, 28, 01, 02, 01, 09, 00, 15, 30, 02, 0f, 01, 02, 00, 00, 09, 00, 10, 30, 11, 0d, 02, 00, 00, 00, 10, 00, 14, 11, 00, 19, 00, 2f, 20, 05, 13, 01, 09, 00, 12, 05, 00, 16, 00, 26, 20, 09, 17, 01, 09, 00, 12, 09, 00, 16, 00, 26, 1b, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 9
- expression 0 operands: lhs = Counter(0), rhs = Expression(3, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(1), rhs = Counter(2)
- expression 4 operands: lhs = Expression(0, Sub), rhs = Counter(2)
- expression 5 operands: lhs = Expression(0, Sub), rhs = Counter(1)
- expression 6 operands: lhs = Expression(7, Add), rhs = Counter(4)
- expression 7 operands: lhs = Expression(8, Add), rhs = Counter(3)
- expression 8 operands: lhs = Counter(2), rhs = Counter(1)
Number of file 0 mappings: 15
- Code(Counter(0)) at (prev + 14, 1) to (start + 0, 36)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = (c0 - (c1 + c2))
- MCDCDecision { bitmap_idx: 0, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 24)
- MCDCBranch { true: Expression(0, Sub), false: Expression(3, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 16)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(3), false: Counter(4), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 23)
    true  = c3
    false = c4
- Code(Counter(3)) at (prev + 0, 28) to (start + 0, 50)
- MCDCDecision { bitmap_idx: 1, conditions_num: 2 } at (prev + 1, 9) to (start + 0, 21)
- MCDCBranch { true: Expression(0, Sub), false: Expression(3, Add), condition_id: 1, true_next_id: 2, false_next_id: 0 } at (prev + 0, 9) to (start + 0, 16)
    true  = (c0 - (c1 + c2))
    false = (c1 + c2)
- MCDCBranch { true: Counter(4), false: Counter(3), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 16) to (start + 0, 20)
    true  = c4
    false = c3
- Code(Counter(4)) at (prev + 0, 25) to (start + 0, 47)
- Branch { true: Counter(1), false: Expression(4, Add) } at (prev + 1, 9) to (start + 0, 18)
    true  = c1
    false = ((c0 - (c1 + c2)) + c2)
- Code(Counter(1)) at (prev + 0, 22) to (start + 0, 38)
- Branch { true: Counter(2), false: Expression(5, Add) } at (prev + 1, 9) to (start + 0, 18)
    true  = c2
    false = ((c0 - (c1 + c2)) + c1)
- Code(Counter(2)) at (prev + 0, 22) to (start + 0, 38)
- Code(Expression(6, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c2 + c1) + c3) + c4)

