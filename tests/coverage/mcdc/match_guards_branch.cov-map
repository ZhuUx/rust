Function name: match_guards_branch::joint_or_patterns
Raw bytes (628): 0x[01, 01, a0, 01, 01, 07, 05, 09, 01, 02, 02, 0d, 02, ba, 04, 02, 0d, 01, 05, 05, ba, 04, 02, 0d, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, b7, 04, b2, 04, 05, ba, 04, 02, 0d, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, b7, 04, 19, 05, ba, 04, 02, 0d, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 21, 15, 11, 15, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 9f, 04, 9a, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 9a, 04, 2d, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 9a, 04, 96, 04, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 9a, 04, 2d, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 9f, 04, 25, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, ff, 04, 31, 35, 3d, fa, 04, 25, ff, 04, 31, 35, cb, 03, ff, 03, 96, 04, 25, 9a, 04, 2d, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 3d, fa, 04, 25, ff, 04, 31, 35, 39, 31, 93, 04, c7, 04, 96, 04, 25, 9a, 04, 2d, 9f, 04, c3, 04, a3, 04, af, 04, a7, 04, aa, 04, 11, 15, 21, 15, 19, b2, 04, b7, 04, bf, 04, 05, ba, 04, 02, 0d, 19, 1d, 25, 29, 39, 31, f3, 04, 3d, f7, 04, 39, 31, fa, 04, 25, ff, 04, 31, 35, 41, 45, e7, 04, ef, 04, eb, 04, 49, 41, 45, f3, 04, 3d, f7, 04, 39, 31, fa, 04, 25, ff, 04, 31, 35, 1a, 01, 2e, 01, 00, 27, 21, 01, 0b, 00, 0e, 02, 01, 0a, 00, 25, 20, 02, 0a, 00, 0a, 00, 11, 20, ba, 04, 12, 00, 11, 00, 18, 20, 05, 1a, 00, 1c, 00, 25, b7, 04, 00, 27, 00, 3c, 20, b2, 04, 36, 00, 27, 00, 30, 20, 19, 52, 00, 33, 00, 3c, af, 04, 00, 41, 00, 63, aa, 04, 01, 23, 00, 39, a7, 04, 01, 0e, 00, 23, 4d, 04, 0b, 00, 0e, 20, 9a, 04, a6, 01, 01, 0a, 00, 11, 20, 96, 04, aa, 02, 00, 11, 00, 18, 3d, 00, 16, 00, 17, 20, 25, 8a, 03, 00, 1c, 00, 25, fa, 04, 00, 23, 00, 24, 20, ff, 03, c6, 03, 00, 27, 00, 30, 3d, 00, 2e, 00, 2f, 20, c7, 04, 8e, 04, 00, 33, 00, 3c, 39, 00, 3a, 00, 3b, ef, 04, 01, 0d, 00, 45, 49, 02, 23, 00, 39, eb, 04, 01, 0e, 00, 23, e3, 04, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 160
- expression 0 operands: lhs = Counter(0), rhs = Expression(1, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(0), rhs = Expression(0, Sub)
- expression 3 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 4 operands: lhs = Expression(0, Sub), rhs = Expression(142, Sub)
- expression 5 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 6 operands: lhs = Counter(0), rhs = Counter(1)
- expression 7 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 8 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 9 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 10 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 11 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 12 operands: lhs = Counter(6), rhs = Counter(7)
- expression 13 operands: lhs = Expression(141, Add), rhs = Expression(140, Sub)
- expression 14 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 15 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 16 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 17 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 18 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 19 operands: lhs = Counter(6), rhs = Counter(7)
- expression 20 operands: lhs = Expression(141, Add), rhs = Counter(6)
- expression 21 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 22 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 23 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 24 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 25 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 26 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 27 operands: lhs = Counter(6), rhs = Counter(7)
- expression 28 operands: lhs = Counter(8), rhs = Counter(5)
- expression 29 operands: lhs = Counter(4), rhs = Counter(5)
- expression 30 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 31 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 32 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 33 operands: lhs = Counter(4), rhs = Counter(5)
- expression 34 operands: lhs = Counter(8), rhs = Counter(5)
- expression 35 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 36 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 37 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 38 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 39 operands: lhs = Counter(6), rhs = Counter(7)
- expression 40 operands: lhs = Counter(9), rhs = Counter(10)
- expression 41 operands: lhs = Expression(135, Add), rhs = Expression(134, Sub)
- expression 42 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 43 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 44 operands: lhs = Counter(4), rhs = Counter(5)
- expression 45 operands: lhs = Counter(8), rhs = Counter(5)
- expression 46 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 47 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 48 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 49 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 50 operands: lhs = Counter(6), rhs = Counter(7)
- expression 51 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 52 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 53 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 54 operands: lhs = Counter(4), rhs = Counter(5)
- expression 55 operands: lhs = Counter(8), rhs = Counter(5)
- expression 56 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 57 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 58 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 59 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 60 operands: lhs = Counter(6), rhs = Counter(7)
- expression 61 operands: lhs = Counter(9), rhs = Counter(10)
- expression 62 operands: lhs = Expression(134, Sub), rhs = Counter(11)
- expression 63 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 64 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 65 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 66 operands: lhs = Counter(4), rhs = Counter(5)
- expression 67 operands: lhs = Counter(8), rhs = Counter(5)
- expression 68 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 69 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 70 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 71 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 72 operands: lhs = Counter(6), rhs = Counter(7)
- expression 73 operands: lhs = Counter(9), rhs = Counter(10)
- expression 74 operands: lhs = Expression(134, Sub), rhs = Expression(133, Sub)
- expression 75 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 76 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 77 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 78 operands: lhs = Counter(4), rhs = Counter(5)
- expression 79 operands: lhs = Counter(8), rhs = Counter(5)
- expression 80 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 81 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 82 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 83 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 84 operands: lhs = Counter(6), rhs = Counter(7)
- expression 85 operands: lhs = Counter(9), rhs = Counter(10)
- expression 86 operands: lhs = Expression(134, Sub), rhs = Counter(11)
- expression 87 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 88 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 89 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 90 operands: lhs = Counter(4), rhs = Counter(5)
- expression 91 operands: lhs = Counter(8), rhs = Counter(5)
- expression 92 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 93 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 94 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 95 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 96 operands: lhs = Counter(6), rhs = Counter(7)
- expression 97 operands: lhs = Counter(9), rhs = Counter(10)
- expression 98 operands: lhs = Expression(135, Add), rhs = Counter(9)
- expression 99 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 100 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 101 operands: lhs = Counter(4), rhs = Counter(5)
- expression 102 operands: lhs = Counter(8), rhs = Counter(5)
- expression 103 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 104 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 105 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 106 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 107 operands: lhs = Counter(6), rhs = Counter(7)
- expression 108 operands: lhs = Counter(9), rhs = Expression(159, Add)
- expression 109 operands: lhs = Counter(12), rhs = Counter(13)
- expression 110 operands: lhs = Counter(15), rhs = Expression(158, Sub)
- expression 111 operands: lhs = Counter(9), rhs = Expression(159, Add)
- expression 112 operands: lhs = Counter(12), rhs = Counter(13)
- expression 113 operands: lhs = Expression(114, Add), rhs = Expression(127, Add)
- expression 114 operands: lhs = Expression(133, Sub), rhs = Counter(9)
- expression 115 operands: lhs = Expression(134, Sub), rhs = Counter(11)
- expression 116 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 117 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 118 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 119 operands: lhs = Counter(4), rhs = Counter(5)
- expression 120 operands: lhs = Counter(8), rhs = Counter(5)
- expression 121 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 122 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 123 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 124 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 125 operands: lhs = Counter(6), rhs = Counter(7)
- expression 126 operands: lhs = Counter(9), rhs = Counter(10)
- expression 127 operands: lhs = Counter(15), rhs = Expression(158, Sub)
- expression 128 operands: lhs = Counter(9), rhs = Expression(159, Add)
- expression 129 operands: lhs = Counter(12), rhs = Counter(13)
- expression 130 operands: lhs = Counter(14), rhs = Counter(12)
- expression 131 operands: lhs = Expression(132, Add), rhs = Expression(145, Add)
- expression 132 operands: lhs = Expression(133, Sub), rhs = Counter(9)
- expression 133 operands: lhs = Expression(134, Sub), rhs = Counter(11)
- expression 134 operands: lhs = Expression(135, Add), rhs = Expression(144, Add)
- expression 135 operands: lhs = Expression(136, Add), rhs = Expression(139, Add)
- expression 136 operands: lhs = Expression(137, Add), rhs = Expression(138, Sub)
- expression 137 operands: lhs = Counter(4), rhs = Counter(5)
- expression 138 operands: lhs = Counter(8), rhs = Counter(5)
- expression 139 operands: lhs = Counter(6), rhs = Expression(140, Sub)
- expression 140 operands: lhs = Expression(141, Add), rhs = Expression(143, Add)
- expression 141 operands: lhs = Counter(1), rhs = Expression(142, Sub)
- expression 142 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 143 operands: lhs = Counter(6), rhs = Counter(7)
- expression 144 operands: lhs = Counter(9), rhs = Counter(10)
- expression 145 operands: lhs = Counter(14), rhs = Counter(12)
- expression 146 operands: lhs = Expression(156, Add), rhs = Counter(15)
- expression 147 operands: lhs = Expression(157, Add), rhs = Counter(14)
- expression 148 operands: lhs = Counter(12), rhs = Expression(158, Sub)
- expression 149 operands: lhs = Counter(9), rhs = Expression(159, Add)
- expression 150 operands: lhs = Counter(12), rhs = Counter(13)
- expression 151 operands: lhs = Counter(16), rhs = Counter(17)
- expression 152 operands: lhs = Expression(153, Add), rhs = Expression(155, Add)
- expression 153 operands: lhs = Expression(154, Add), rhs = Counter(18)
- expression 154 operands: lhs = Counter(16), rhs = Counter(17)
- expression 155 operands: lhs = Expression(156, Add), rhs = Counter(15)
- expression 156 operands: lhs = Expression(157, Add), rhs = Counter(14)
- expression 157 operands: lhs = Counter(12), rhs = Expression(158, Sub)
- expression 158 operands: lhs = Counter(9), rhs = Expression(159, Add)
- expression 159 operands: lhs = Counter(12), rhs = Counter(13)
Number of file 0 mappings: 26
- Code(Counter(0)) at (prev + 46, 1) to (start + 0, 39)
- Code(Counter(8)) at (prev + 1, 11) to (start + 0, 14)
- Code(Expression(0, Sub)) at (prev + 1, 10) to (start + 0, 37)
    = (c0 - (c1 + c2))
- Branch { true: Expression(0, Sub), false: Expression(2, Sub) } at (prev + 0, 10) to (start + 0, 17)
    true  = (c0 - (c1 + c2))
    false = (c0 - (c0 - (c1 + c2)))
- Branch { true: Expression(142, Sub), false: Expression(4, Sub) } at (prev + 0, 17) to (start + 0, 24)
    true  = ((c0 - (c1 + c2)) - c3)
    false = ((c0 - (c1 + c2)) - ((c0 - (c1 + c2)) - c3))
- Branch { true: Counter(1), false: Expression(6, Sub) } at (prev + 0, 28) to (start + 0, 37)
    true  = c1
    false = (c0 - c1)
- Code(Expression(141, Add)) at (prev + 0, 39) to (start + 0, 60)
    = (c1 + ((c0 - (c1 + c2)) - c3))
- Branch { true: Expression(140, Sub), false: Expression(13, Sub) } at (prev + 0, 39) to (start + 0, 48)
    true  = ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7))
    false = ((c1 + ((c0 - (c1 + c2)) - c3)) - ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))
- Branch { true: Counter(6), false: Expression(20, Sub) } at (prev + 0, 51) to (start + 0, 60)
    true  = c6
    false = ((c1 + ((c0 - (c1 + c2)) - c3)) - c6)
- Code(Expression(139, Add)) at (prev + 0, 65) to (start + 0, 99)
    = (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))
- Code(Expression(138, Sub)) at (prev + 1, 35) to (start + 0, 57)
    = (c8 - c5)
- Code(Expression(137, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c4 + c5)
- Code(Counter(19)) at (prev + 4, 11) to (start + 0, 14)
- Branch { true: Expression(134, Sub), false: Expression(41, Sub) } at (prev + 1, 10) to (start + 0, 17)
    true  = ((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10))
    false = ((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - ((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)))
- Branch { true: Expression(133, Sub), false: Expression(74, Sub) } at (prev + 0, 17) to (start + 0, 24)
    true  = (((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)) - c11)
    false = (((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)) - (((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)) - c11))
- Code(Counter(15)) at (prev + 0, 22) to (start + 0, 23)
- Branch { true: Counter(9), false: Expression(98, Sub) } at (prev + 0, 28) to (start + 0, 37)
    true  = c9
    false = ((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - c9)
- Code(Expression(158, Sub)) at (prev + 0, 35) to (start + 0, 36)
    = (c9 - (c12 + c13))
- Branch { true: Expression(127, Add), false: Expression(113, Sub) } at (prev + 0, 39) to (start + 0, 48)
    true  = (c15 + (c9 - (c12 + c13)))
    false = (((((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)) - c11) + c9) - (c15 + (c9 - (c12 + c13))))
- Code(Counter(15)) at (prev + 0, 46) to (start + 0, 47)
- Branch { true: Expression(145, Add), false: Expression(131, Sub) } at (prev + 0, 51) to (start + 0, 60)
    true  = (c14 + c12)
    false = (((((((c4 + c5) + (c8 - c5)) + (c6 + ((c1 + ((c0 - (c1 + c2)) - c3)) - (c6 + c7)))) - (c9 + c10)) - c11) + c9) - (c14 + c12))
- Code(Counter(14)) at (prev + 0, 58) to (start + 0, 59)
- Code(Expression(155, Add)) at (prev + 1, 13) to (start + 0, 69)
    = (((c12 + (c9 - (c12 + c13))) + c14) + c15)
- Code(Counter(18)) at (prev + 2, 35) to (start + 0, 57)
- Code(Expression(154, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (c16 + c17)
- Code(Expression(152, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c16 + c17) + c18) + (((c12 + (c9 - (c12 + c13))) + c14) + c15))

Function name: match_guards_branch::joint_pattern_with_or
Raw bytes (129): 0x[01, 01, 1e, 3a, 0f, 01, 3f, 05, 09, 1d, 11, 3a, 02, 01, 3f, 05, 09, 02, 21, 3a, 1d, 01, 3f, 05, 09, 01, 3f, 05, 09, 01, 3a, 01, 3f, 05, 09, 1d, 21, 19, 05, 4f, 53, 05, 01, 19, 05, 6f, 15, 73, 11, 09, 0d, 67, 77, 6b, 19, 6f, 15, 73, 11, 09, 0d, 1d, 21, 0b, 01, 26, 01, 00, 2b, 02, 01, 0b, 00, 0e, 20, 02, 12, 01, 0a, 00, 11, 20, 21, 1e, 00, 11, 00, 18, 20, 1d, 22, 00, 1c, 00, 25, 20, 3a, 36, 00, 27, 00, 30, 77, 00, 35, 00, 53, 20, 53, 4a, 01, 0a, 00, 13, 19, 00, 23, 00, 39, 6b, 01, 0e, 00, 23, 63, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 30
- expression 0 operands: lhs = Expression(14, Sub), rhs = Expression(3, Add)
- expression 1 operands: lhs = Counter(0), rhs = Expression(15, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(7), rhs = Counter(4)
- expression 4 operands: lhs = Expression(14, Sub), rhs = Expression(0, Sub)
- expression 5 operands: lhs = Counter(0), rhs = Expression(15, Add)
- expression 6 operands: lhs = Counter(1), rhs = Counter(2)
- expression 7 operands: lhs = Expression(0, Sub), rhs = Counter(8)
- expression 8 operands: lhs = Expression(14, Sub), rhs = Counter(7)
- expression 9 operands: lhs = Counter(0), rhs = Expression(15, Add)
- expression 10 operands: lhs = Counter(1), rhs = Counter(2)
- expression 11 operands: lhs = Counter(0), rhs = Expression(15, Add)
- expression 12 operands: lhs = Counter(1), rhs = Counter(2)
- expression 13 operands: lhs = Counter(0), rhs = Expression(14, Sub)
- expression 14 operands: lhs = Counter(0), rhs = Expression(15, Add)
- expression 15 operands: lhs = Counter(1), rhs = Counter(2)
- expression 16 operands: lhs = Counter(7), rhs = Counter(8)
- expression 17 operands: lhs = Counter(6), rhs = Counter(1)
- expression 18 operands: lhs = Expression(19, Add), rhs = Expression(20, Add)
- expression 19 operands: lhs = Counter(1), rhs = Counter(0)
- expression 20 operands: lhs = Counter(6), rhs = Counter(1)
- expression 21 operands: lhs = Expression(27, Add), rhs = Counter(5)
- expression 22 operands: lhs = Expression(28, Add), rhs = Counter(4)
- expression 23 operands: lhs = Counter(2), rhs = Counter(3)
- expression 24 operands: lhs = Expression(25, Add), rhs = Expression(29, Add)
- expression 25 operands: lhs = Expression(26, Add), rhs = Counter(6)
- expression 26 operands: lhs = Expression(27, Add), rhs = Counter(5)
- expression 27 operands: lhs = Expression(28, Add), rhs = Counter(4)
- expression 28 operands: lhs = Counter(2), rhs = Counter(3)
- expression 29 operands: lhs = Counter(7), rhs = Counter(8)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 38, 1) to (start + 0, 43)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - (c7 + c4))
- Branch { true: Expression(0, Sub), false: Expression(4, Sub) } at (prev + 1, 10) to (start + 0, 17)
    true  = ((c0 - (c1 + c2)) - (c7 + c4))
    false = ((c0 - (c1 + c2)) - ((c0 - (c1 + c2)) - (c7 + c4)))
- Branch { true: Counter(8), false: Expression(7, Sub) } at (prev + 0, 17) to (start + 0, 24)
    true  = c8
    false = (((c0 - (c1 + c2)) - (c7 + c4)) - c8)
- Branch { true: Counter(7), false: Expression(8, Sub) } at (prev + 0, 28) to (start + 0, 37)
    true  = c7
    false = ((c0 - (c1 + c2)) - c7)
- Branch { true: Expression(14, Sub), false: Expression(13, Sub) } at (prev + 0, 39) to (start + 0, 48)
    true  = (c0 - (c1 + c2))
    false = (c0 - (c0 - (c1 + c2)))
- Code(Expression(29, Add)) at (prev + 0, 53) to (start + 0, 83)
    = (c7 + c8)
- Branch { true: Expression(20, Add), false: Expression(18, Sub) } at (prev + 1, 10) to (start + 0, 19)
    true  = (c6 + c1)
    false = ((c1 + c0) - (c6 + c1))
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(26, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(24, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + (c7 + c8))

Function name: match_guards_branch::main
Raw bytes (9): 0x[01, 01, 00, 01, 01, 3f, 01, 14, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 0
Number of file 0 mappings: 1
- Code(Counter(0)) at (prev + 63, 1) to (start + 20, 2)

Function name: match_guards_branch::simple_joint_pattern
Raw bytes (113): 0x[01, 01, 16, 2a, 11, 01, 2f, 05, 09, 01, 2f, 05, 09, 01, 2a, 01, 2f, 05, 09, 02, 1d, 2a, 02, 01, 2f, 05, 09, 01, 05, 05, 19, 53, 15, 57, 11, 09, 0d, 4b, 1d, 4f, 19, 53, 15, 57, 11, 09, 0d, 0b, 01, 1e, 01, 00, 2a, 02, 01, 0b, 00, 0e, 20, 2a, 16, 01, 0a, 00, 11, 20, 1d, 22, 00, 11, 00, 18, 20, 02, 26, 00, 1b, 00, 24, 1d, 00, 29, 00, 43, 20, 05, 32, 01, 0a, 00, 13, 20, 19, 36, 00, 15, 00, 1e, 19, 00, 23, 00, 39, 4f, 01, 0e, 00, 23, 47, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 22
- expression 0 operands: lhs = Expression(10, Sub), rhs = Counter(4)
- expression 1 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 4 operands: lhs = Counter(1), rhs = Counter(2)
- expression 5 operands: lhs = Counter(0), rhs = Expression(10, Sub)
- expression 6 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 7 operands: lhs = Counter(1), rhs = Counter(2)
- expression 8 operands: lhs = Expression(0, Sub), rhs = Counter(7)
- expression 9 operands: lhs = Expression(10, Sub), rhs = Expression(0, Sub)
- expression 10 operands: lhs = Counter(0), rhs = Expression(11, Add)
- expression 11 operands: lhs = Counter(1), rhs = Counter(2)
- expression 12 operands: lhs = Counter(0), rhs = Counter(1)
- expression 13 operands: lhs = Counter(1), rhs = Counter(6)
- expression 14 operands: lhs = Expression(20, Add), rhs = Counter(5)
- expression 15 operands: lhs = Expression(21, Add), rhs = Counter(4)
- expression 16 operands: lhs = Counter(2), rhs = Counter(3)
- expression 17 operands: lhs = Expression(18, Add), rhs = Counter(7)
- expression 18 operands: lhs = Expression(19, Add), rhs = Counter(6)
- expression 19 operands: lhs = Expression(20, Add), rhs = Counter(5)
- expression 20 operands: lhs = Expression(21, Add), rhs = Counter(4)
- expression 21 operands: lhs = Counter(2), rhs = Counter(3)
Number of file 0 mappings: 11
- Code(Counter(0)) at (prev + 30, 1) to (start + 0, 42)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = ((c0 - (c1 + c2)) - c4)
- Branch { true: Expression(10, Sub), false: Expression(5, Sub) } at (prev + 1, 10) to (start + 0, 17)
    true  = (c0 - (c1 + c2))
    false = (c0 - (c0 - (c1 + c2)))
- Branch { true: Counter(7), false: Expression(8, Sub) } at (prev + 0, 17) to (start + 0, 24)
    true  = c7
    false = (((c0 - (c1 + c2)) - c4) - c7)
- Branch { true: Expression(0, Sub), false: Expression(9, Sub) } at (prev + 0, 27) to (start + 0, 36)
    true  = ((c0 - (c1 + c2)) - c4)
    false = ((c0 - (c1 + c2)) - ((c0 - (c1 + c2)) - c4))
- Code(Counter(7)) at (prev + 0, 41) to (start + 0, 67)
- Branch { true: Counter(1), false: Expression(12, Sub) } at (prev + 1, 10) to (start + 0, 19)
    true  = c1
    false = (c0 - c1)
- Branch { true: Counter(6), false: Expression(13, Sub) } at (prev + 0, 21) to (start + 0, 30)
    true  = c6
    false = (c1 - c6)
- Code(Counter(6)) at (prev + 0, 35) to (start + 0, 57)
- Code(Expression(19, Add)) at (prev + 1, 14) to (start + 0, 35)
    = (((c2 + c3) + c4) + c5)
- Code(Expression(17, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((((c2 + c3) + c4) + c5) + c6) + c7)

Function name: match_guards_branch::simple_or_pattern
Raw bytes (52): 0x[01, 01, 07, 01, 07, 05, 09, 01, 02, 01, 05, 05, 02, 09, 1b, 05, 02, 06, 01, 17, 01, 01, 0e, 20, 02, 0a, 02, 09, 00, 12, 20, 05, 0e, 00, 15, 00, 1e, 1b, 00, 22, 00, 37, 09, 01, 0e, 00, 1e, 17, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 7
- expression 0 operands: lhs = Counter(0), rhs = Expression(1, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(0), rhs = Expression(0, Sub)
- expression 3 operands: lhs = Counter(0), rhs = Counter(1)
- expression 4 operands: lhs = Counter(1), rhs = Expression(0, Sub)
- expression 5 operands: lhs = Counter(2), rhs = Expression(6, Add)
- expression 6 operands: lhs = Counter(1), rhs = Expression(0, Sub)
Number of file 0 mappings: 6
- Code(Counter(0)) at (prev + 23, 1) to (start + 1, 14)
- Branch { true: Expression(0, Sub), false: Expression(2, Sub) } at (prev + 2, 9) to (start + 0, 18)
    true  = (c0 - (c1 + c2))
    false = (c0 - (c0 - (c1 + c2)))
- Branch { true: Counter(1), false: Expression(3, Sub) } at (prev + 0, 21) to (start + 0, 30)
    true  = c1
    false = (c0 - c1)
- Code(Expression(6, Add)) at (prev + 0, 34) to (start + 0, 55)
    = (c1 + (c0 - (c1 + c2)))
- Code(Counter(2)) at (prev + 1, 14) to (start + 0, 30)
- Code(Expression(5, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (c2 + (c1 + (c0 - (c1 + c2))))

Function name: match_guards_branch::single_nested_pattern
Raw bytes (94): 0x[01, 01, 0a, 01, 07, 05, 09, 01, 02, 02, 0d, 02, 11, 01, 05, 01, 09, 23, 11, 27, 0d, 09, 05, 0c, 01, 0e, 01, 00, 24, 02, 01, 0b, 00, 0e, 20, 02, 0a, 01, 09, 00, 10, 20, 0d, 0e, 00, 10, 00, 17, 0d, 00, 1c, 00, 32, 20, 11, 12, 01, 10, 00, 14, 11, 00, 19, 00, 2f, 20, 05, 16, 01, 09, 00, 12, 05, 00, 16, 00, 26, 20, 09, 1a, 01, 09, 00, 12, 09, 00, 16, 00, 26, 1f, 02, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 10
- expression 0 operands: lhs = Counter(0), rhs = Expression(1, Add)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(0), rhs = Expression(0, Sub)
- expression 3 operands: lhs = Expression(0, Sub), rhs = Counter(3)
- expression 4 operands: lhs = Expression(0, Sub), rhs = Counter(4)
- expression 5 operands: lhs = Counter(0), rhs = Counter(1)
- expression 6 operands: lhs = Counter(0), rhs = Counter(2)
- expression 7 operands: lhs = Expression(8, Add), rhs = Counter(4)
- expression 8 operands: lhs = Expression(9, Add), rhs = Counter(3)
- expression 9 operands: lhs = Counter(2), rhs = Counter(1)
Number of file 0 mappings: 12
- Code(Counter(0)) at (prev + 14, 1) to (start + 0, 36)
- Code(Expression(0, Sub)) at (prev + 1, 11) to (start + 0, 14)
    = (c0 - (c1 + c2))
- Branch { true: Expression(0, Sub), false: Expression(2, Sub) } at (prev + 1, 9) to (start + 0, 16)
    true  = (c0 - (c1 + c2))
    false = (c0 - (c0 - (c1 + c2)))
- Branch { true: Counter(3), false: Expression(3, Sub) } at (prev + 0, 16) to (start + 0, 23)
    true  = c3
    false = ((c0 - (c1 + c2)) - c3)
- Code(Counter(3)) at (prev + 0, 28) to (start + 0, 50)
- Branch { true: Counter(4), false: Expression(4, Sub) } at (prev + 1, 16) to (start + 0, 20)
    true  = c4
    false = ((c0 - (c1 + c2)) - c4)
- Code(Counter(4)) at (prev + 0, 25) to (start + 0, 47)
- Branch { true: Counter(1), false: Expression(5, Sub) } at (prev + 1, 9) to (start + 0, 18)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 22) to (start + 0, 38)
- Branch { true: Counter(2), false: Expression(6, Sub) } at (prev + 1, 9) to (start + 0, 18)
    true  = c2
    false = (c0 - c2)
- Code(Counter(2)) at (prev + 0, 22) to (start + 0, 38)
- Code(Expression(7, Add)) at (prev + 2, 1) to (start + 0, 2)
    = (((c2 + c1) + c3) + c4)

